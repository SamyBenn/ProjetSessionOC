/* VeuilleuseOled.h */
/* Copyright (C) 2020 Alain Dube
 * All rights reserved.
 *
 * Faire la gestion de l'Ã©cran Oled
 * 
 * */
#ifndef MYOLED_H
#define MYOLED_H

#include <string>

//Logo Ecole Du Web GROS
// (Horizontal) byte array of bitmap :
// NOTE: width NOT a multiple of 8 (required by some LCDs & printers)
//http : //en.radzio.dxp.pl/bitmap_converter/
const unsigned char Cegep16x16[] = {
    0x00, 0x00, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x0F, 0x80, 0x0F, 0x18, 0x0E, 0x3C, 0x0C, 0x7E,
    0x08, 0x3E, 0x01, 0x1E, 0x03, 0x8E, 0x07, 0xC6, 0x0F, 0xC2, 0x1F, 0x80, 0x3F, 0x00, 0x7E, 0x00};

const unsigned char PushMan24x48_1[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xC3, 0x80, 0x02, 0x00, 0x40, 0x04, 0x00, 0x20, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x00, 0x08, 0x00, 0x10, 0x08, 0x00, 0x10, 0x08, 0x00, 0x20, 0x00, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x03, 0x80, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7C, 0x1C, 0x00, 0x00, 0x1C,
    0xFF, 0xFF, 0xF8, 0x00, 0x08, 0x38, 0x00, 0x0C, 0x38, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0B, 0xE0, 0x00, 0x09, 0xE0, 0x00, 0x08, 0xE0, 0x00, 0x08, 0x40, 0x00, 0x08, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x80, 0x00, 0x10, 0x40, 0x00, 0x20, 0x40, 0x00,
    0x20, 0x40, 0x00, 0xE0, 0x40, 0x01, 0xC0, 0x40, 0x03, 0x80, 0x40, 0x06, 0x00, 0x40, 0x0C, 0x00,
    0x40, 0x18, 0x00, 0x40, 0x30, 0x00, 0x40, 0x60, 0x00, 0x40, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00};

const unsigned char PushMan24x48_2[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x08, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x80, 0x00,
    0x10, 0x80, 0x00, 0x10, 0x80, 0x00, 0x60, 0x80, 0x00, 0xC0, 0x80, 0x00, 0xC0, 0x00, 0x01, 0x81,
    0x00, 0x02, 0x01, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01, 0x00, 0x08, 0x01, 0x00, 0x10, 0x01, 0x00};

const unsigned char PushMan24x48_3[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x16, 0x00, 0x00, 0x32, 0x00, 0x00, 0x62, 0x00, 0x00, 0x42,
    0x00, 0x00, 0xC0, 0x00, 0x01, 0x84, 0x00, 0x01, 0x84, 0x00, 0x02, 0x04, 0x00, 0x04, 0x04, 0x00};

const unsigned char PushMan24x48_4[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x30, 0x00, 0x00, 0x70, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xE0, 0x00};

const unsigned char PushMan24x48_5[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00};

const unsigned char PushMan24x48_6[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x09, 0x00, 0x00,
    0x09, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x22, 0x00, 0x00, 0x62, 0x00, 0x00, 0xC2,
    0x00, 0x00, 0x80, 0x00, 0x01, 0x84, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x04, 0x04, 0x00};

const unsigned char PushMan24x48_7[] = {
    0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x01, 0xFF, 0x00, 0x02, 0x00, 0x80, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x06, 0x00, 0xC0, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x1C, 0x30, 0x00, 0x1E, 0x30, 0x00, 0x1F, 0xF0, 0x00,
    0x1F, 0xE0, 0x00, 0x11, 0xE0, 0x00, 0x11, 0xE0, 0x00, 0x10, 0xC0, 0x00, 0x10, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x80, 0x00,
    0x20, 0x80, 0x00, 0x60, 0x80, 0x00, 0xC0, 0x80, 0x00, 0xC0, 0x00, 0x01, 0x80, 0x00, 0x02, 0x01,
    0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01, 0x00, 0x10, 0x01, 0x00, 0x20, 0x01, 0x00};



//Pour la gestion du Oled
//lib_deps = adafruit / Adafruit SSD1306 @^2.4.0
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_I2CDevice.h>

//lib_deps = bblanchon/ArduinoJson @ ^6.17.2
//#include <ArduinoJson.h>

class MyOled : public Adafruit_SSD1306
{
public:
    int init(int displaySplashTime = 0, uint8_t addrI2C = 0x3C);  //Parfois 3D
    void veilleOn(bool active);

    MyOled(TwoWire *twi, uint8_t RST = 4, uint8_t rawHeight = 64, uint8_t rawWidth = 128) : Adafruit_SSD1306(rawWidth, rawHeight, twi, RST){ };
    void printSpecialChar(std::string spacialCaractere, int makeDelaySecondes = 0);
    void printIt(std::string toDisplay, bool displayAfter, int makeDelaySecondes = 0);
    void printIt(int posx, int posy, std::string toDisplay, bool displayAfter, int makeDelaySecondes = 0);

    //int DisplayScreenJson(std::string jsonData);

    bool veilleCheck();
    void veilleDelay(int nbreSecondes);

    

private:
    /*static*/ unsigned char *PushMan24x48Pointers[7];
    void displaySplash(int makeDelaySecondes);

    static void vATaskSecondCount(void *pvParameters);
    static int veilleTimeLapse;
    int veilleNbreSecondes = -1;
    bool veilleActif = false;

    String lastError;
    
};
#endif